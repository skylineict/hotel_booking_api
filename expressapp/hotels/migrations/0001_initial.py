# Generated by Django 4.0 on 2024-06-17 14:13

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import shortuuid.django_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('usersauth', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_id', shortuuid.django_fields.ShortUUIDField(alphabet='asd23', editable=False, length=8, max_length=20, prefix='hot', unique=True)),
                ('name', models.CharField(max_length=300, verbose_name='name')),
                ('image', models.ImageField(upload_to='category', verbose_name='image')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facility_id', shortuuid.django_fields.ShortUUIDField(alphabet='abcd2020d', editable=False, length=8, max_length=20, prefix='fac', unique=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usersauth.manager', verbose_name='Managers')),
            ],
            options={
                'verbose_name_plural': 'Facilities',
            },
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotles_id', shortuuid.django_fields.ShortUUIDField(alphabet='ahel203', editable=False, length=8, max_length=20, prefix='hot', unique=True)),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=400, verbose_name='address')),
                ('state', models.CharField(max_length=255)),
                ('images', models.ImageField(default='product.jpg', upload_to='hotel-images')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('specifications', models.TextField(max_length=200)),
                ('num_rooms', models.CharField(max_length=255)),
                ('hotel_status', models.CharField(choices=[('draft', 'Draft'), ('disable', 'Disable'), ('reject', 'Reject'), ('in_review', 'In Review'), ('approved', 'Approved')], default='in_review', max_length=200)),
                ('features', models.BooleanField(default=False, verbose_name='features')),
                ('avag_rating', models.FloatField(default=0.0)),
                ('rating_num', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='HotelLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_location_id', shortuuid.django_fields.ShortUUIDField(alphabet='hoteloc23', editable=False, length=8, max_length=20, prefix='hotl', unique=True)),
                ('name', models.CharField(max_length=200)),
                ('image', models.ImageField(blank=True, null=True, upload_to='hotel_location/')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Hotel Locations',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_id', shortuuid.django_fields.ShortUUIDField(alphabet='abcd2020', editable=False, length=8, max_length=20, prefix='room', unique=True)),
                ('room_no', models.IntegerField(unique=True)),
                ('old_price', models.DecimalField(decimal_places=2, default=90.93, max_digits=10)),
                ('available', models.BooleanField(default=True)),
                ('available_rooms', models.CharField(max_length=200)),
                ('room_specification', models.TextField()),
                ('images', models.ImageField(default='product.jpg', upload_to='room-images')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('facilities', models.ManyToManyField(related_name='facility', to='hotels.Facility', verbose_name='facilities')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='hotels.hotel')),
            ],
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_id', shortuuid.django_fields.ShortUUIDField(alphabet='rotre34', editable=False, length=8, max_length=20, prefix='room', unique=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usersauth.manager', verbose_name='Managers')),
            ],
        ),
        migrations.CreateModel(
            name='RoomImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.ImageField(default='product.jpg', upload_to='room-images')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='room_images', to='hotels.room')),
            ],
        ),
        migrations.AddField(
            model_name='room',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_type', to='hotels.roomtype'),
        ),
        migrations.CreateModel(
            name='HotelReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviewid', shortuuid.django_fields.ShortUUIDField(alphabet='abcd2020', length=8, max_length=20, prefix='re', unique=True)),
                ('review', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('hotel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hotel_reviews', to='hotels.hotel')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='usersauth.customer')),
            ],
            options={
                'verbose_name_plural': 'Hotel Reviews',
            },
        ),
        migrations.CreateModel(
            name='HotelImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.ImageField(default='product.jpg', upload_to='room-images')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('hotel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='room_images', to='hotels.hotel')),
            ],
        ),
        migrations.AddField(
            model_name='hotel',
            name='city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotels.hotellocation'),
        ),
        migrations.AddField(
            model_name='hotel',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usersauth.manager', verbose_name='owner'),
        ),
    ]
